{"version":3,"sources":["services/photo-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/App.js","index.js"],"names":["newQuery","page","axios","get","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","React","Component","ImageGalleryItem","photo","openModal","onClick","src","webformatURL","alt","ImageGallery","photos","map","key","id","largeImageURL","Load","color","height","width","timeout","Button","fetchPhotos","modalRoot","document","querySelector","Modal","handleEscapePress","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","isLoading","showModal","currentPhoto","options","PhotoApi","then","response","prevState","data","hits","finally","onChangeQuery","toggleModal","prevProps","scroll","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ccd9e49.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '17889682-7384d09bbfdcaf741bb48a713';\n\nconst fetchPhotos = ({ newQuery = '', page = 1 }) => {\n  return axios.get(\n    `https://pixabay.com/api/?key=${API_KEY}&q=${newQuery}&per_page=12&page=${page}`,\n  );\n};\n\nexport default { fetchPhotos };\n","import React from 'react';\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends React.Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = event => {\n    this.setState({ query: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\n// onSubmit\n","import React from 'react';\nimport styles from './ImageGalleryItem.module.css';\n\nexport function ImageGalleryItem({ photo, openModal }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={openModal}>\n      <img\n        src={photo.webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        // onClick={o}\n      />\n    </li>\n  );\n}\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport styles from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ photos, openModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {photos.map(photo => (\n        <ImageGalleryItem\n          key={photo.id}\n          photo={photo}\n          openModal={() => openModal(photo.largeImageURL)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ImageGallery;\n","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport default function Load() {\n  return (\n    <Loader\n      className=\"Loader\"\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import React from 'react';\nimport styles from './Button.module.css';\n\nexport default function Button({ fetchPhotos }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={fetchPhotos}>\n      Load more\n    </button>\n  );\n}\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends React.Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleEscapePress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleEscapePress);\n  }\n\n  handleEscapePress = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.src} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React from 'react';\nimport PhotoApi from '../services/photo-api';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Loader from './Loader/Loader';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\n\nimport '../styles.css';\n\n// 17889682-7384d09bbfdcaf741bb48a713\n// https://pixabay.com/api/?key=17889682-7384d09bbfdcaf741bb48a713&q=yellow+flowers&per_page=12&page=1\n\nclass App extends React.Component {\n  state = {\n    photos: [],\n    page: 1,\n    newQuery: '',\n    isLoading: false,\n    showModal: false,\n    currentPhoto: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.newQuery !== this.state.newQuery) {\n      this.fetchPhotos();\n    }\n    this.scroll();\n  }\n\n  scroll() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  fetchPhotos = () => {\n    const { page, newQuery } = this.state;\n    const options = { page, newQuery };\n\n    this.setState({ isLoading: true });\n\n    PhotoApi.fetchPhotos(options)\n      .then(response =>\n        this.setState(prevState => ({\n          photos: [...prevState.photos, ...response.data.hits],\n          page: prevState.page + 1,\n        })),\n      )\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onChangeQuery = query => {\n    this.setState({ newQuery: query, page: 1, photos: [] });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  openModal = src => {\n    this.setState({ currentPhoto: src });\n    this.toggleModal();\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery photos={this.state.photos} openModal={this.openModal} />\n        {this.state.isLoading && <Loader />}\n        {this.state.photos.length > 0 && !this.state.isLoading && (\n          <Button fetchPhotos={this.fetchPhotos} />\n        )}\n        {this.state.showModal && (\n          <Modal src={this.state.currentPhoto} onClose={this.toggleModal} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}